// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mua/im_sequence.proto

package sequence

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetAutoIncrIDReq struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAutoIncrIDReq) Reset()         { *m = GetAutoIncrIDReq{} }
func (m *GetAutoIncrIDReq) String() string { return proto.CompactTextString(m) }
func (*GetAutoIncrIDReq) ProtoMessage()    {}
func (*GetAutoIncrIDReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_49318523350f0b4b, []int{0}
}

func (m *GetAutoIncrIDReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutoIncrIDReq.Unmarshal(m, b)
}
func (m *GetAutoIncrIDReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutoIncrIDReq.Marshal(b, m, deterministic)
}
func (m *GetAutoIncrIDReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutoIncrIDReq.Merge(m, src)
}
func (m *GetAutoIncrIDReq) XXX_Size() int {
	return xxx_messageInfo_GetAutoIncrIDReq.Size(m)
}
func (m *GetAutoIncrIDReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutoIncrIDReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutoIncrIDReq proto.InternalMessageInfo

func (m *GetAutoIncrIDReq) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetAutoIncrIDRsp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAutoIncrIDRsp) Reset()         { *m = GetAutoIncrIDRsp{} }
func (m *GetAutoIncrIDRsp) String() string { return proto.CompactTextString(m) }
func (*GetAutoIncrIDRsp) ProtoMessage()    {}
func (*GetAutoIncrIDRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_49318523350f0b4b, []int{1}
}

func (m *GetAutoIncrIDRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAutoIncrIDRsp.Unmarshal(m, b)
}
func (m *GetAutoIncrIDRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAutoIncrIDRsp.Marshal(b, m, deterministic)
}
func (m *GetAutoIncrIDRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAutoIncrIDRsp.Merge(m, src)
}
func (m *GetAutoIncrIDRsp) XXX_Size() int {
	return xxx_messageInfo_GetAutoIncrIDRsp.Size(m)
}
func (m *GetAutoIncrIDRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAutoIncrIDRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetAutoIncrIDRsp proto.InternalMessageInfo

func (m *GetAutoIncrIDRsp) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func init() {
	proto.RegisterType((*GetAutoIncrIDReq)(nil), "mua.im.sequence.GetAutoIncrIDReq")
	proto.RegisterType((*GetAutoIncrIDRsp)(nil), "mua.im.sequence.GetAutoIncrIDRsp")
}

func init() { proto.RegisterFile("mua/im_sequence.proto", fileDescriptor_49318523350f0b4b) }

var fileDescriptor_49318523350f0b4b = []byte{
	// 154 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xcd, 0x2d, 0x4d, 0xd4,
	0xcf, 0xcc, 0x8d, 0x2f, 0x4e, 0x2d, 0x2c, 0x4d, 0xcd, 0x4b, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0xcf, 0x2d, 0x4d, 0xd4, 0xcb, 0xcc, 0xd5, 0x83, 0x09, 0x2b, 0xa9, 0x70, 0x09,
	0xb8, 0xa7, 0x96, 0x38, 0x96, 0x96, 0xe4, 0x7b, 0xe6, 0x25, 0x17, 0x79, 0xba, 0x04, 0xa5, 0x16,
	0x0a, 0x09, 0x70, 0x31, 0x67, 0xa7, 0x56, 0x4a, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0x98,
	0x4a, 0x4a, 0xe8, 0xaa, 0x8a, 0x0b, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0xc0, 0x8a, 0x98, 0x83,
	0x98, 0x32, 0x53, 0x8c, 0x12, 0xb9, 0x38, 0x82, 0xa1, 0xa6, 0x0a, 0x85, 0x72, 0xf1, 0xa2, 0xa8,
	0x17, 0x52, 0xd4, 0x43, 0xb3, 0x58, 0x0f, 0xdd, 0x56, 0x29, 0x42, 0x4a, 0x8a, 0x0b, 0x9c, 0x04,
	0xa3, 0xf8, 0x21, 0xde, 0xd2, 0x87, 0xa9, 0x49, 0x62, 0x03, 0xfb, 0xcb, 0x18, 0x10, 0x00, 0x00,
	0xff, 0xff, 0x5d, 0x10, 0xe5, 0x1b, 0xf0, 0x00, 0x00, 0x00,
}
